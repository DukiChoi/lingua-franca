/**
 * Test that the link-libraries target property is working correctly.
 * The failure for this test is failure to compile.
 */
target C {
    //link-std-libs: "m",
    timeout: 0 sec
};

reactor Foo {
    preamble {=
        #include <assert.h>     // Conditionally compiled macro that compares its argument to zero <complex.h> (C99)
        #include <complex.h>    // Complex number arithmetic
        #include <ctype.h> 	    // Functions to determine the type contained in character data
        #include <errno.h> 	    // Macros reporting error conditions
        #include <fenv.h>       // (C99) Floating-point environment
        #include <float.h>      // Limits of floating-point types
        #include <inttypes.h>   // (C99) Format conversion of integer types
        #include <iso646.h>     // (C95) Alternative operator spellings
        #include <limits.h>     // Ranges of integer types
        #include <locale.h> 	// Localization utilities
        #include <math.h> 	    // Common mathematics functions
        #include <setjmp.h> 	// Nonlocal jumps
        #include <signal.h> 	// Signal handling
        #include <stdalign.h>   // (C11) alignas and alignof convenience macros
        #include <stdarg.h> 	// Variable arguments
        #include <stdatomic.h>  // (C11) Atomic operations
        #include <stdbool.h>    // (C99) Macros for boolean type
        #include <stddef.h> 	// Common macro definitions
        #include <stdint.h>     // (C99) Fixed-width integer types
        #include <stdio.h>      // Input/output
        #include <stdlib.h>     // General utilities: memory management, program utilities, string conversions, random numbers algorithms
        #include <stdnoreturn.h>    //(C11) noreturn convenience macro
        #include <string.h>         // String handling
        #include <tgmath.h>         // (C99) Type-generic math (macros wrapping math.h and complex.h)
        #include <threads.h>        // (C11) Thread library
        #include <time.h>           //  Time/date utilities
        #include <uchar.h>          // (C11) UTF-16 and UTF-32 character utilities
        #include <wchar.h>          // (C95) Extended multibyte and wide character utilities
        #include <wctype.h>         // (C95)
    =}
    reaction (startup) {=
        info_print("Maximum of 42.0 and 75 is %.2f", fmax(4.20, 75));
    =}
}

main reactor {
    f = new Foo();
}
